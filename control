#!/usr/bin/php -q
<?php
// Set our paths.
define('ROOT_PATH', dirname(__FILE__) . DIRECTORY_SEPARATOR);

// The script being called.
$called     = $argv[0];

// Allowed commands.
$commands   = array('start', 'stop', 'config-test', 'status');

// Remove the caller.
array_shift($argv);

// Check if the called command is allowed.
if (empty($argv[0]) || !in_array($argv[0], $commands))
{
    exit("Usage: $called (start|stop|config-test|status|log)\n");
}

// Some arguments can supply a bot config - check for it.
$config = str_replace('.php', '', (empty($argv[1]) ? 'default' : $argv[1]));
$cfile  = ROOT_PATH . '.' . $config . '.php';

// Include the bot config.
if (!file_exists($cfile))
{
    exit("Bot configuration '$config' is missing.");
}

// Check what we're being asked to do.
switch ($argv[0])
{
    case 'stop':
        exit("Not yet implemented\n");
        break;

    case 'config-test':
        // Check if the PHP alone is valid.
        system('php -l ' . $cfile);
        exit;
        break;

    case 'status':
        exit("Not yet implemented\n");
        break;

    case 'log':
        exit("Not yet implemented\n");
        break;
}

// Grab the IRC class.
require_once(ROOT_PATH . 'irc.php');

/**
 * Create a new bot.
 */
$bot    = new IRC(require_once($cfile));

/**
 * Set up hooks for before and after connecting.
 */
$before = function() use ($bot)
{
    // Do something.
};

$after  = function() use ($bot)
{
    $bot->send('JOIN #test');
};

/**
 * Set up an event.
 */
$bot->addEvent('PING', function($data) use ($bot)
{
    $bot->send('PONG :' . $data->sender);
});

/**
 * Connect to IRC.
 */
try
{
    /**
     * Connect.
     */
    $bot->connect(null, $after);

    /**
     * Do stuff.
     */
    while ($data = $bot->get())
    {
        $bot->log("< " . implode(' ', (array) $data));
    }
}
catch(Exception $e)
{
    exit($e->getMessage() . "\n");
}